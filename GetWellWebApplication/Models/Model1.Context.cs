

//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré à partir d'un modèle.
//
//     Des modifications manuelles apportées à ce fichier peuvent conduire à un comportement inattendu de votre application.
//     Les modifications manuelles apportées à ce fichier sont remplacées si le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------


namespace GetWellWebApplication.Models
{

using System;
using System.Data.Entity;
using System.Data.Entity.Infrastructure;

using System.Data.Entity.Core.Objects;
using System.Linq;


public partial class db_a7366b_getwellEntities : DbContext
{
    public db_a7366b_getwellEntities()
        : base("name=db_a7366b_getwellEntities")
    {

    }

    protected override void OnModelCreating(DbModelBuilder modelBuilder)
    {
        throw new UnintentionalCodeFirstException();
    }


    public virtual DbSet<categorie> categorie { get; set; }

    public virtual DbSet<certificat> certificat { get; set; }

    public virtual DbSet<diagnostique> diagnostique { get; set; }

    public virtual DbSet<medecin> medecin { get; set; }

    public virtual DbSet<nootation> nootation { get; set; }

    public virtual DbSet<patient> patient { get; set; }

    public virtual DbSet<rendezvous> rendezvous { get; set; }

    public virtual DbSet<teleconsultation> teleconsultation { get; set; }


    public virtual int AddAppointment(Nullable<System.DateTime> date, Nullable<System.DateTime> dateprise, Nullable<System.TimeSpan> temp_rdv, Nullable<int> id_patient, Nullable<int> id_doc, Nullable<int> id_cat)
    {

        var dateParameter = date.HasValue ?
            new ObjectParameter("Date", date) :
            new ObjectParameter("Date", typeof(System.DateTime));


        var datepriseParameter = dateprise.HasValue ?
            new ObjectParameter("dateprise", dateprise) :
            new ObjectParameter("dateprise", typeof(System.DateTime));


        var temp_rdvParameter = temp_rdv.HasValue ?
            new ObjectParameter("temp_rdv", temp_rdv) :
            new ObjectParameter("temp_rdv", typeof(System.TimeSpan));


        var id_patientParameter = id_patient.HasValue ?
            new ObjectParameter("Id_patient", id_patient) :
            new ObjectParameter("Id_patient", typeof(int));


        var id_docParameter = id_doc.HasValue ?
            new ObjectParameter("Id_doc", id_doc) :
            new ObjectParameter("Id_doc", typeof(int));


        var id_catParameter = id_cat.HasValue ?
            new ObjectParameter("Id_cat", id_cat) :
            new ObjectParameter("Id_cat", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddAppointment", dateParameter, datepriseParameter, temp_rdvParameter, id_patientParameter, id_docParameter, id_catParameter);
    }


    public virtual int Addcategory(string nom, string description, Nullable<int> id_doc)
    {

        var nomParameter = nom != null ?
            new ObjectParameter("Nom", nom) :
            new ObjectParameter("Nom", typeof(string));


        var descriptionParameter = description != null ?
            new ObjectParameter("Description", description) :
            new ObjectParameter("Description", typeof(string));


        var id_docParameter = id_doc.HasValue ?
            new ObjectParameter("Id_doc", id_doc) :
            new ObjectParameter("Id_doc", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Addcategory", nomParameter, descriptionParameter, id_docParameter);
    }


    public virtual int AddCertificate(string nom, string institut, string annén, Nullable<int> id_doc)
    {

        var nomParameter = nom != null ?
            new ObjectParameter("Nom", nom) :
            new ObjectParameter("Nom", typeof(string));


        var institutParameter = institut != null ?
            new ObjectParameter("institut", institut) :
            new ObjectParameter("institut", typeof(string));


        var annénParameter = annén != null ?
            new ObjectParameter("annén", annén) :
            new ObjectParameter("annén", typeof(string));


        var id_docParameter = id_doc.HasValue ?
            new ObjectParameter("Id_doc", id_doc) :
            new ObjectParameter("Id_doc", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddCertificate", nomParameter, institutParameter, annénParameter, id_docParameter);
    }


    public virtual int AddDiagnostic(string description, Nullable<System.DateTime> date_diag, Nullable<int> id_patient, Nullable<int> id_doc)
    {

        var descriptionParameter = description != null ?
            new ObjectParameter("Description", description) :
            new ObjectParameter("Description", typeof(string));


        var date_diagParameter = date_diag.HasValue ?
            new ObjectParameter("Date_diag", date_diag) :
            new ObjectParameter("Date_diag", typeof(System.DateTime));


        var id_patientParameter = id_patient.HasValue ?
            new ObjectParameter("Id_patient", id_patient) :
            new ObjectParameter("Id_patient", typeof(int));


        var id_docParameter = id_doc.HasValue ?
            new ObjectParameter("Id_doc", id_doc) :
            new ObjectParameter("Id_doc", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddDiagnostic", descriptionParameter, date_diagParameter, id_patientParameter, id_docParameter);
    }


    public virtual int AddMedecine(string username, string password, string nom, string prenom, string tel, byte[] image, string email, Nullable<int> nbrpatients, string ville, string adresse, string facebook, string whatsapp, string instagram, string twitter, string linkeden, Nullable<System.Guid> salt, Nullable<double> latitude, Nullable<double> longitude)
    {

        var usernameParameter = username != null ?
            new ObjectParameter("Username", username) :
            new ObjectParameter("Username", typeof(string));


        var passwordParameter = password != null ?
            new ObjectParameter("Password", password) :
            new ObjectParameter("Password", typeof(string));


        var nomParameter = nom != null ?
            new ObjectParameter("Nom", nom) :
            new ObjectParameter("Nom", typeof(string));


        var prenomParameter = prenom != null ?
            new ObjectParameter("Prenom", prenom) :
            new ObjectParameter("Prenom", typeof(string));


        var telParameter = tel != null ?
            new ObjectParameter("Tel", tel) :
            new ObjectParameter("Tel", typeof(string));


        var imageParameter = image != null ?
            new ObjectParameter("Image", image) :
            new ObjectParameter("Image", typeof(byte[]));


        var emailParameter = email != null ?
            new ObjectParameter("Email", email) :
            new ObjectParameter("Email", typeof(string));


        var nbrpatientsParameter = nbrpatients.HasValue ?
            new ObjectParameter("Nbrpatients", nbrpatients) :
            new ObjectParameter("Nbrpatients", typeof(int));


        var villeParameter = ville != null ?
            new ObjectParameter("ville", ville) :
            new ObjectParameter("ville", typeof(string));


        var adresseParameter = adresse != null ?
            new ObjectParameter("Adresse", adresse) :
            new ObjectParameter("Adresse", typeof(string));


        var facebookParameter = facebook != null ?
            new ObjectParameter("Facebook", facebook) :
            new ObjectParameter("Facebook", typeof(string));


        var whatsappParameter = whatsapp != null ?
            new ObjectParameter("Whatsapp", whatsapp) :
            new ObjectParameter("Whatsapp", typeof(string));


        var instagramParameter = instagram != null ?
            new ObjectParameter("Instagram", instagram) :
            new ObjectParameter("Instagram", typeof(string));


        var twitterParameter = twitter != null ?
            new ObjectParameter("Twitter", twitter) :
            new ObjectParameter("Twitter", typeof(string));


        var linkedenParameter = linkeden != null ?
            new ObjectParameter("Linkeden", linkeden) :
            new ObjectParameter("Linkeden", typeof(string));


        var saltParameter = salt.HasValue ?
            new ObjectParameter("salt", salt) :
            new ObjectParameter("salt", typeof(System.Guid));


        var latitudeParameter = latitude.HasValue ?
            new ObjectParameter("latitude", latitude) :
            new ObjectParameter("latitude", typeof(double));


        var longitudeParameter = longitude.HasValue ?
            new ObjectParameter("longitude", longitude) :
            new ObjectParameter("longitude", typeof(double));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddMedecine", usernameParameter, passwordParameter, nomParameter, prenomParameter, telParameter, imageParameter, emailParameter, nbrpatientsParameter, villeParameter, adresseParameter, facebookParameter, whatsappParameter, instagramParameter, twitterParameter, linkedenParameter, saltParameter, latitudeParameter, longitudeParameter);
    }


    public virtual int AddNotation(Nullable<double> note, Nullable<int> id_patient, Nullable<int> id_doc)
    {

        var noteParameter = note.HasValue ?
            new ObjectParameter("Note", note) :
            new ObjectParameter("Note", typeof(double));


        var id_patientParameter = id_patient.HasValue ?
            new ObjectParameter("Id_patient", id_patient) :
            new ObjectParameter("Id_patient", typeof(int));


        var id_docParameter = id_doc.HasValue ?
            new ObjectParameter("Id_doc", id_doc) :
            new ObjectParameter("Id_doc", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddNotation", noteParameter, id_patientParameter, id_docParameter);
    }


    public virtual int AddPatient(string cIN, string nom, string prenom, Nullable<System.DateTime> date_naissance, string tel, string email)
    {

        var cINParameter = cIN != null ?
            new ObjectParameter("CIN", cIN) :
            new ObjectParameter("CIN", typeof(string));


        var nomParameter = nom != null ?
            new ObjectParameter("Nom", nom) :
            new ObjectParameter("Nom", typeof(string));


        var prenomParameter = prenom != null ?
            new ObjectParameter("Prenom", prenom) :
            new ObjectParameter("Prenom", typeof(string));


        var date_naissanceParameter = date_naissance.HasValue ?
            new ObjectParameter("Date_naissance", date_naissance) :
            new ObjectParameter("Date_naissance", typeof(System.DateTime));


        var telParameter = tel != null ?
            new ObjectParameter("Tel", tel) :
            new ObjectParameter("Tel", typeof(string));


        var emailParameter = email != null ?
            new ObjectParameter("Email", email) :
            new ObjectParameter("Email", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddPatient", cINParameter, nomParameter, prenomParameter, date_naissanceParameter, telParameter, emailParameter);
    }


    public virtual int AddTeleconsultation(string description, Nullable<System.DateTime> date_telecon, Nullable<int> id_patient, Nullable<int> id_doc)
    {

        var descriptionParameter = description != null ?
            new ObjectParameter("Description", description) :
            new ObjectParameter("Description", typeof(string));


        var date_teleconParameter = date_telecon.HasValue ?
            new ObjectParameter("Date_telecon", date_telecon) :
            new ObjectParameter("Date_telecon", typeof(System.DateTime));


        var id_patientParameter = id_patient.HasValue ?
            new ObjectParameter("Id_patient", id_patient) :
            new ObjectParameter("Id_patient", typeof(int));


        var id_docParameter = id_doc.HasValue ?
            new ObjectParameter("Id_doc", id_doc) :
            new ObjectParameter("Id_doc", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddTeleconsultation", descriptionParameter, date_teleconParameter, id_patientParameter, id_docParameter);
    }


    public virtual int DeleteAppointment(Nullable<int> id_rv)
    {

        var id_rvParameter = id_rv.HasValue ?
            new ObjectParameter("Id_rv", id_rv) :
            new ObjectParameter("Id_rv", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteAppointment", id_rvParameter);
    }


    public virtual int Deletecategory(Nullable<int> id_cat)
    {

        var id_catParameter = id_cat.HasValue ?
            new ObjectParameter("id_cat", id_cat) :
            new ObjectParameter("id_cat", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Deletecategory", id_catParameter);
    }


    public virtual int DeleteDiagnostic(Nullable<int> id_diag)
    {

        var id_diagParameter = id_diag.HasValue ?
            new ObjectParameter("Id_diag", id_diag) :
            new ObjectParameter("Id_diag", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteDiagnostic", id_diagParameter);
    }


    public virtual int Deleteertificate(Nullable<int> num_cert)
    {

        var num_certParameter = num_cert.HasValue ?
            new ObjectParameter("Num_cert", num_cert) :
            new ObjectParameter("Num_cert", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Deleteertificate", num_certParameter);
    }


    public virtual int DeletegNotation(Nullable<int> id_not)
    {

        var id_notParameter = id_not.HasValue ?
            new ObjectParameter("Id_not", id_not) :
            new ObjectParameter("Id_not", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeletegNotation", id_notParameter);
    }


    public virtual int Deletemedecin(Nullable<int> id_doc)
    {

        var id_docParameter = id_doc.HasValue ?
            new ObjectParameter("Id_doc", id_doc) :
            new ObjectParameter("Id_doc", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Deletemedecin", id_docParameter);
    }


    public virtual int DeletePatient(Nullable<int> id_patient)
    {

        var id_patientParameter = id_patient.HasValue ?
            new ObjectParameter("Id_patient", id_patient) :
            new ObjectParameter("Id_patient", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeletePatient", id_patientParameter);
    }


    public virtual ObjectResult<Nullable<int>> login_doc(string username, string password)
    {

        var usernameParameter = username != null ?
            new ObjectParameter("Username", username) :
            new ObjectParameter("Username", typeof(string));


        var passwordParameter = password != null ?
            new ObjectParameter("Password", password) :
            new ObjectParameter("Password", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("login_doc", usernameParameter, passwordParameter);
    }


    public virtual int UpdateAppointment(Nullable<int> id_rv, Nullable<System.DateTime> date, Nullable<System.DateTime> dateprise, Nullable<System.TimeSpan> temp_rdv, Nullable<int> id_patient, Nullable<int> id_doc, Nullable<int> id_cat)
    {

        var id_rvParameter = id_rv.HasValue ?
            new ObjectParameter("Id_rv", id_rv) :
            new ObjectParameter("Id_rv", typeof(int));


        var dateParameter = date.HasValue ?
            new ObjectParameter("Date", date) :
            new ObjectParameter("Date", typeof(System.DateTime));


        var datepriseParameter = dateprise.HasValue ?
            new ObjectParameter("dateprise", dateprise) :
            new ObjectParameter("dateprise", typeof(System.DateTime));


        var temp_rdvParameter = temp_rdv.HasValue ?
            new ObjectParameter("temp_rdv", temp_rdv) :
            new ObjectParameter("temp_rdv", typeof(System.TimeSpan));


        var id_patientParameter = id_patient.HasValue ?
            new ObjectParameter("Id_patient", id_patient) :
            new ObjectParameter("Id_patient", typeof(int));


        var id_docParameter = id_doc.HasValue ?
            new ObjectParameter("Id_doc", id_doc) :
            new ObjectParameter("Id_doc", typeof(int));


        var id_catParameter = id_cat.HasValue ?
            new ObjectParameter("Id_cat", id_cat) :
            new ObjectParameter("Id_cat", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateAppointment", id_rvParameter, dateParameter, datepriseParameter, temp_rdvParameter, id_patientParameter, id_docParameter, id_catParameter);
    }


    public virtual int Updatecategory(Nullable<int> id_cat, string nom, string description, Nullable<int> id_doc)
    {

        var id_catParameter = id_cat.HasValue ?
            new ObjectParameter("id_cat", id_cat) :
            new ObjectParameter("id_cat", typeof(int));


        var nomParameter = nom != null ?
            new ObjectParameter("Nom", nom) :
            new ObjectParameter("Nom", typeof(string));


        var descriptionParameter = description != null ?
            new ObjectParameter("Description", description) :
            new ObjectParameter("Description", typeof(string));


        var id_docParameter = id_doc.HasValue ?
            new ObjectParameter("Id_doc", id_doc) :
            new ObjectParameter("Id_doc", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Updatecategory", id_catParameter, nomParameter, descriptionParameter, id_docParameter);
    }


    public virtual int UpdateCertificate(Nullable<int> num_cert, string nom, string institut, string annén, Nullable<int> id_doc)
    {

        var num_certParameter = num_cert.HasValue ?
            new ObjectParameter("Num_cert", num_cert) :
            new ObjectParameter("Num_cert", typeof(int));


        var nomParameter = nom != null ?
            new ObjectParameter("Nom", nom) :
            new ObjectParameter("Nom", typeof(string));


        var institutParameter = institut != null ?
            new ObjectParameter("institut", institut) :
            new ObjectParameter("institut", typeof(string));


        var annénParameter = annén != null ?
            new ObjectParameter("annén", annén) :
            new ObjectParameter("annén", typeof(string));


        var id_docParameter = id_doc.HasValue ?
            new ObjectParameter("Id_doc", id_doc) :
            new ObjectParameter("Id_doc", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateCertificate", num_certParameter, nomParameter, institutParameter, annénParameter, id_docParameter);
    }


    public virtual int UpdateDiagnostic(Nullable<int> id_diag, string description, Nullable<System.DateTime> date_diag, Nullable<int> id_patient, Nullable<int> id_doc)
    {

        var id_diagParameter = id_diag.HasValue ?
            new ObjectParameter("Id_diag", id_diag) :
            new ObjectParameter("Id_diag", typeof(int));


        var descriptionParameter = description != null ?
            new ObjectParameter("Description", description) :
            new ObjectParameter("Description", typeof(string));


        var date_diagParameter = date_diag.HasValue ?
            new ObjectParameter("Date_diag", date_diag) :
            new ObjectParameter("Date_diag", typeof(System.DateTime));


        var id_patientParameter = id_patient.HasValue ?
            new ObjectParameter("Id_patient", id_patient) :
            new ObjectParameter("Id_patient", typeof(int));


        var id_docParameter = id_doc.HasValue ?
            new ObjectParameter("Id_doc", id_doc) :
            new ObjectParameter("Id_doc", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateDiagnostic", id_diagParameter, descriptionParameter, date_diagParameter, id_patientParameter, id_docParameter);
    }


    public virtual int UpdateMedecine(Nullable<int> id_doc, string username, string password, string nom, string prenom, string tel, byte[] image, string email, Nullable<int> nbrpatients, string ville, string adresse, string localisation, string facebook, string whatsapp, string instagram, string twitter, string linkeden)
    {

        var id_docParameter = id_doc.HasValue ?
            new ObjectParameter("Id_doc", id_doc) :
            new ObjectParameter("Id_doc", typeof(int));


        var usernameParameter = username != null ?
            new ObjectParameter("Username", username) :
            new ObjectParameter("Username", typeof(string));


        var passwordParameter = password != null ?
            new ObjectParameter("Password", password) :
            new ObjectParameter("Password", typeof(string));


        var nomParameter = nom != null ?
            new ObjectParameter("Nom", nom) :
            new ObjectParameter("Nom", typeof(string));


        var prenomParameter = prenom != null ?
            new ObjectParameter("Prenom", prenom) :
            new ObjectParameter("Prenom", typeof(string));


        var telParameter = tel != null ?
            new ObjectParameter("Tel", tel) :
            new ObjectParameter("Tel", typeof(string));


        var imageParameter = image != null ?
            new ObjectParameter("Image", image) :
            new ObjectParameter("Image", typeof(byte[]));


        var emailParameter = email != null ?
            new ObjectParameter("Email", email) :
            new ObjectParameter("Email", typeof(string));


        var nbrpatientsParameter = nbrpatients.HasValue ?
            new ObjectParameter("Nbrpatients", nbrpatients) :
            new ObjectParameter("Nbrpatients", typeof(int));


        var villeParameter = ville != null ?
            new ObjectParameter("ville", ville) :
            new ObjectParameter("ville", typeof(string));


        var adresseParameter = adresse != null ?
            new ObjectParameter("Adresse", adresse) :
            new ObjectParameter("Adresse", typeof(string));


        var localisationParameter = localisation != null ?
            new ObjectParameter("Localisation", localisation) :
            new ObjectParameter("Localisation", typeof(string));


        var facebookParameter = facebook != null ?
            new ObjectParameter("Facebook", facebook) :
            new ObjectParameter("Facebook", typeof(string));


        var whatsappParameter = whatsapp != null ?
            new ObjectParameter("Whatsapp", whatsapp) :
            new ObjectParameter("Whatsapp", typeof(string));


        var instagramParameter = instagram != null ?
            new ObjectParameter("Instagram", instagram) :
            new ObjectParameter("Instagram", typeof(string));


        var twitterParameter = twitter != null ?
            new ObjectParameter("Twitter", twitter) :
            new ObjectParameter("Twitter", typeof(string));


        var linkedenParameter = linkeden != null ?
            new ObjectParameter("Linkeden", linkeden) :
            new ObjectParameter("Linkeden", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateMedecine", id_docParameter, usernameParameter, passwordParameter, nomParameter, prenomParameter, telParameter, imageParameter, emailParameter, nbrpatientsParameter, villeParameter, adresseParameter, localisationParameter, facebookParameter, whatsappParameter, instagramParameter, twitterParameter, linkedenParameter);
    }


    public virtual int UpdatePatient(Nullable<int> id_patient, string cIN, string nom, string prenom, Nullable<System.DateTime> date_naissance, string tel, string email)
    {

        var id_patientParameter = id_patient.HasValue ?
            new ObjectParameter("Id_patient", id_patient) :
            new ObjectParameter("Id_patient", typeof(int));


        var cINParameter = cIN != null ?
            new ObjectParameter("CIN", cIN) :
            new ObjectParameter("CIN", typeof(string));


        var nomParameter = nom != null ?
            new ObjectParameter("Nom", nom) :
            new ObjectParameter("Nom", typeof(string));


        var prenomParameter = prenom != null ?
            new ObjectParameter("Prenom", prenom) :
            new ObjectParameter("Prenom", typeof(string));


        var date_naissanceParameter = date_naissance.HasValue ?
            new ObjectParameter("Date_naissance", date_naissance) :
            new ObjectParameter("Date_naissance", typeof(System.DateTime));


        var telParameter = tel != null ?
            new ObjectParameter("Tel", tel) :
            new ObjectParameter("Tel", typeof(string));


        var emailParameter = email != null ?
            new ObjectParameter("Email", email) :
            new ObjectParameter("Email", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdatePatient", id_patientParameter, cINParameter, nomParameter, prenomParameter, date_naissanceParameter, telParameter, emailParameter);
    }


    public virtual int UpdateTeleconsultation(Nullable<int> id_telecon, string description, Nullable<System.DateTime> date_telecon, Nullable<int> id_patient, Nullable<int> id_doc)
    {

        var id_teleconParameter = id_telecon.HasValue ?
            new ObjectParameter("Id_telecon", id_telecon) :
            new ObjectParameter("Id_telecon", typeof(int));


        var descriptionParameter = description != null ?
            new ObjectParameter("Description", description) :
            new ObjectParameter("Description", typeof(string));


        var date_teleconParameter = date_telecon.HasValue ?
            new ObjectParameter("Date_telecon", date_telecon) :
            new ObjectParameter("Date_telecon", typeof(System.DateTime));


        var id_patientParameter = id_patient.HasValue ?
            new ObjectParameter("Id_patient", id_patient) :
            new ObjectParameter("Id_patient", typeof(int));


        var id_docParameter = id_doc.HasValue ?
            new ObjectParameter("Id_doc", id_doc) :
            new ObjectParameter("Id_doc", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateTeleconsultation", id_teleconParameter, descriptionParameter, date_teleconParameter, id_patientParameter, id_docParameter);
    }


    public virtual int UpdatingNotation(Nullable<int> id_not, Nullable<double> note, Nullable<int> id_patient, Nullable<int> id_doc)
    {

        var id_notParameter = id_not.HasValue ?
            new ObjectParameter("Id_not", id_not) :
            new ObjectParameter("Id_not", typeof(int));


        var noteParameter = note.HasValue ?
            new ObjectParameter("Note", note) :
            new ObjectParameter("Note", typeof(double));


        var id_patientParameter = id_patient.HasValue ?
            new ObjectParameter("Id_patient", id_patient) :
            new ObjectParameter("Id_patient", typeof(int));


        var id_docParameter = id_doc.HasValue ?
            new ObjectParameter("Id_doc", id_doc) :
            new ObjectParameter("Id_doc", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdatingNotation", id_notParameter, noteParameter, id_patientParameter, id_docParameter);
    }

}

}

